//DEFINE VARIABLES
var canwidth;
var ground;

var plantnum;

var separation;
var stalkheight;
var branchheight;

let rootx = [];
let rooty = [];
let stalkx = [];
let stalky = [];

let seed1x = [];
let seed1y = [];
let seed2x = [];
let seed2y = [];
let seed3x = [];
let seed3y = [];

let randomx = [];
let randomy = [];

var xpos;
var ypos;
var begx;
var begy;
var endx;
var endy;

// Average stalk height and branchheight
var stalkheight;
var branchheight;

var pcount;

// var x;
var y;
var dx;
var dy;

let leaf1width = [];
let leaf2width = [];
let leaf1height = [];
let leaf2height = [];

// Selection variables
let noselectp = [];
var seeddroppressed;
var selectplant = 0;
var selecton;
var dropped;

var season = 0;
let seed1;
let seed2;
var randomw1;
var randomw2;


function resetSketch(){    
  // Define total number of plants    
    plantnum = 2;
    
  // Define average stalk height and branchheight
    stalkheight = 200;
    branchheight = 80;
      
  // Define average x position of first plant
    xpos = 200;
  // Define average y position of top of stalk
    ypos = ground - stalkheight;   
  // Define root points and stalk tops
    separation = 0;
    for (var i = 0; i < plantnum; i++) {
    randomx[i] = random(-40,40);
    randomy[i] = random(-30,30);
    rootx[i]  = xpos + separation +randomx[i];
    rooty[i]  = ground;
    stalkx[i] = rootx[i];
    stalky[i] = ypos + randomy[i];
    separation = separation + 400;
      
    randomw1 = random(-3,3)
    randomw2 = random(-3,3)

    
  // Define leaf points   
    leaf1x[i] = rootx[i] - 100;
    leaf1y[i] = rooty[i] - branchheight - 40;
      
    leaf2x[i] = rootx[i] + 110;
    leaf2y[i] = rooty[i] - branchheight - 90;
      
  // Define seed points
    seed1x[i] = rootx[i] -40
    seed1y[i] = stalky[i] -55;
    seed2x[i] = rootx[i] - 6;
    seed2y[i] = stalky[i] - 70;
    seed3x[i] = rootx[i] + 50;
    seed3y[i] = stalky[i] - 55;

  // Initialise selection variables
    noselectp[i] = false;
    seeddroppressed = false;  
    dropped = false;
    selecton = true;
   
  }
}

// new plant class
let plants = []


//START

function setup() {
    //define canvas width and height (ground)
    canwidth = 800;
    ground = 400;
  createCanvas(canwidth, ground);
  
  // resetSketch();

  var buttonReset = createButton("reset");
  buttonReset.mousePressed(resetSketch); 
  
  var buttonDropseeds = createButton("DROP SEEDS")
  buttonDropseeds.mousePressed(Dropseeds);
  
  var buttonNewSeason = createButton("NEW SEASON")
  buttonNewSeason.mousePressed(NewSeason);
  

  let genButton = createButton("next gen")
  // genButton.mousePressed(createNextGen(p.lsystem))

  let p1 = new Plant(width /2, height)
  let p2 = new Plant(100, height)
  p2.init()
  p1.init()
  plants.push(p1)
  plants.push(p2)

}
  
function draw() {
  background(220,180,220)
  plants.forEach(p => p.draw())
}

function drawOld() {
    background(160,170,245);
    stroke(20, 100, 200);
 
  if (season == 0) {
   // Define initial leaf widths and heights
    leaf1width[0] = 64;
    leaf1height[0] = 94;
    leaf2width[0] = leaf1width[0] + randomw1;
    leaf2height[0] = 83;
          
    leaf1width[1] = 34;
    leaf1height[1] = 136;
    leaf2width[1] = leaf1width[1] + randomw2;
    leaf2height[1] = 103;
    
  }
  
// Draw the fixed plant reference points (for testing purposes)
    strokeWeight(2)
    xpos = 200;
    for (let i = 0; i < plantnum; i++) {
      line (xpos, ground, xpos, ypos)
      xpos = xpos + 400;
      } 
  
// Draw the field of plants 
  Grow();
}

function NewSeason() {
  season = season + 1
         
    randomw1 = random(-3,3)
    randomw2 = random(-3,3)

    print('season = ' + season, 'selectplant = ' + selectplant);

 resetSketch(); 
  
  // Set leaf widths and heights
    if (selectplant == 1) {
    for (let i = 0; i < plantnum; i++) {
      leaf1width[i] = leaf1width[0] + random(-8,8)
      leaf2width[i] = leaf1width[0] + random(-8,8)
      leaf1height[i] = leaf1height[0] + random(-22,22)
      leaf2height[i] = leaf1height[0] + random(-22,22)
  }   
      print('Season = ' + season, 'selectplant = ' + selectplant);
      print('leaf1width[0] = ' + leaf1width[0], 'leaf1width[1] = ' + leaf1width[1],);
      print('leaf2width[0] = ' + leaf2width[0], 'leaf2width[1] = ' + leaf2width[1],);
      

  } else {
    if (selectplant == 2) {
    for (let i = 0; i < plantnum; i++) {
      leaf1width[i] = leaf1width[1] + random(-8,8)
      leaf2width[i] = leaf1width[1] + random(-8,8)
      leaf1height[i] = leaf1height[1] + random(-22,22)
      leaf2height[i] = leaf1height[1] + random(-22,22)
    }    
    print('Seeson = ' + season, 'selectplant = ' + selectplant); 
    print('leaf1width[0] = ' + leaf1width[0], 'leaf1width[1] = ' + leaf1width[1],);
    print('leaf2width[0] = ' + leaf2width[0], 'leaf2width[1] = ' + leaf2width[1],);
    }
  }
  // Draw the plants 
  Grow();
}

  function Grow() {
    
    if(selecton) {
    textSize(24);
    fill(0);
    strokeWeight(0);
    text('SELECT', 350, 40);
     } else {  
        noFill();
        stroke(240, 100, 20);
      if (noselectp[0]) {
        ellipse (rootx[1],150,160)
       }
      if (noselectp[1]) {
        ellipse (rootx[0],150,160)
     }
  }
    branchpoint = ground - branchheight;    
    
    // Draw the plants

  for (pcount = 0; pcount < plantnum; pcount++) {
    
  if (noselectp[pcount]) {

  } else {

    drawplant(pcount);
    
  // Draw the seeds unless SEEDDROP has been pressed
    if (seeddroppressed == false) {
      
    seed1 = new Seedshowdrop(seed1x[pcount], seed1y[pcount]);
    seed2 = new Seedshowdrop(seed2x[pcount], seed2y[pcount]);
      
    seed1.show();
    seed2.show();
      
     } else {
       
  // Drop the seeds
    seed1.move();
    seed1.show();
    seed2.move();
    seed2.show();
    dropped = true;
     }
     }
    }
  }

function Dropseeds() { 
// this function sets variables to proceed for seed dropping when the SEEDDROP button is clicked
   seeddroppressed = true;     
 // If DROP SEED was pressed without selecting any plant, turn off SELECT sign
  if (selecton){
    selecton = false;
  }
}


function mousePressed(){ 
  // Do not allow selection if seeds have already dropped
  if (!dropped) {
  
  // Allow mouse to be pressed only once (only 1 plant can be selected)
  if (selecton) {
    
  // Select plant1 if the mouse is pressed near plant1
  if (mouseX >80 && mouseX < 320 && mouseY > 10 && mouseY < 400) {
    noselectp[1] = true;
    selectplant = 1;
    selecton = false;
      noFill();
      strokeWeight(7);
      ellipse (200,150,160)
  
  } else {
  // Select plant2 if the mouse is pressed near plant2
    if (mouseX > 420 && mouseX < 720 && mouseY > 10 && mouseY < 400) {
    noselectp[0] = true;
    selectplant = 2;
    selecton = false;
      noFill();
      strokeWeight(7);
      ellipse (600,150,160)
  }
  }
  }  
  }
}
  
  function drawplant(i){
  // Draw the stalk
  w = 20;
  colourwidth(130, 240, 150, w);
  drawstalk(rootx[i], rooty[i], stalkx[i], stalky[i], w);

  // Draw branch 1 and leaf 1
  w = 10;
  drawbranch(rootx[i], branchpoint, leaf1x[i], leaf1y[i], w);
  drawleaf(leaf1x[i], leaf1y[i] - (leaf1height[i] / 2), leaf1width[i], leaf1height[i]);
   
  // Draw branch 2 and leaf 2
  drawbranch(rootx[i], branchpoint, leaf2x[i], leaf2y[i], w);
  drawleaf(leaf2x[i], leaf2y[i] - (leaf2height[i] / 2), leaf2width[i], leaf2height[i]);
  
  //Draw seed stems
  
  // Set line width of seed stems:
  strokeWeight(7);
    
  // Draw 3 seed stems
  line(stalkx[i], stalky[i], seed1x[i], seed1y[i]); 
    
  line(stalkx[i], stalky[i], seed2x[i], seed2y[i]);  

  line(stalkx[i], stalky[i],  seed3x[i], seed3y[i]);  

  // Draw seed 3
  seed3 = new Seedshowdrop(seed3x[i], seed3y[i]);
  seed3.show();
   }    

   
  function colourwidth(r,b,g,w){
  // Set colour and line width
  stroke(r,b,g);
  strokeWeight(w);
}
  
function drawstalk(begx, begy, endx, endy, w){
  // Draw stalk
    strokeWeight(w);
    line(begx, begy, endx, endy);
}
    
function drawbranch(begx, begy, endx, endy,w){
  // Set line width of branches
    strokeWeight(w);  
  // Draw branch
    line(begx, begy, endx, endy);
}
  
function drawleaf(x, y, dx, dy){
  //Draw leaf
    strokeWeight(5);
    fill(0, 190, 60);
    ellipse (x, y, dx, dy);

 //Draw leaf vein
    strokeWeight (5);
    line (x, y + dy/2, x, y - dy/2);
}

  
class Seedshowdrop {
// Showing and dropping a seed
  constructor(x, y){
    this.x = x;
    this.y = y;

// Set seed colours
    fill(280, 140, 20);
    stroke(230, 140, 50);
    strokeWeight(7);
  }
  show(){
// Draw seed
    ellipse (this.x, this.y, 20)    
  }
// Dropping the seed
  move(){
     // Drop the seed onto the field
   if (this.y < 400) {
// this.x = random (5, 795);
    this.x = this.x + random (-20, 20);
    this.y = this.y + 5;
    }
  }
}
